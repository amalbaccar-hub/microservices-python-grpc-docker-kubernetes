# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and payment_server classes corresponding to protobuf-defined services."""
import grpc

from customer_service import customer_registration_pb2 as customer__service_dot_customer__registration__pb2


class CustomerRegistrationStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.register_new_customer = channel.unary_unary(
                '/customer.CustomerRegistration/register_new_customer',
                request_serializer=customer__service_dot_customer__registration__pb2.CustomerRegistrationRequest.SerializeToString,
                response_deserializer=customer__service_dot_customer__registration__pb2.CustomerRegistrationResponse.FromString,
                )
        self.get_customer_by_reference = channel.unary_unary(
                '/customer.CustomerRegistration/get_customer_by_reference',
                request_serializer=customer__service_dot_customer__registration__pb2.GetCustomerByReferenceRequest.SerializeToString,
                response_deserializer=customer__service_dot_customer__registration__pb2.GetCustomerByReferenceResponse.FromString,
                )
        self.get_customer_by_email = channel.unary_unary(
                '/customer.CustomerRegistration/get_customer_by_email',
                request_serializer=customer__service_dot_customer__registration__pb2.GetCustomerByEmailRequest.SerializeToString,
                response_deserializer=customer__service_dot_customer__registration__pb2.GetCustomerByEmailResponse.FromString,
                )


class CustomerRegistrationServicer(object):
    """Missing associated documentation comment in .proto file."""

    def register_new_customer(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_customer_by_reference(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_customer_by_email(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CustomerRegistrationServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'register_new_customer': grpc.unary_unary_rpc_method_handler(
                    servicer.register_new_customer,
                    request_deserializer=customer__service_dot_customer__registration__pb2.CustomerRegistrationRequest.FromString,
                    response_serializer=customer__service_dot_customer__registration__pb2.CustomerRegistrationResponse.SerializeToString,
            ),
            'get_customer_by_reference': grpc.unary_unary_rpc_method_handler(
                    servicer.get_customer_by_reference,
                    request_deserializer=customer__service_dot_customer__registration__pb2.GetCustomerByReferenceRequest.FromString,
                    response_serializer=customer__service_dot_customer__registration__pb2.GetCustomerByReferenceResponse.SerializeToString,
            ),
            'get_customer_by_email': grpc.unary_unary_rpc_method_handler(
                    servicer.get_customer_by_email,
                    request_deserializer=customer__service_dot_customer__registration__pb2.GetCustomerByEmailRequest.FromString,
                    response_serializer=customer__service_dot_customer__registration__pb2.GetCustomerByEmailResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'customer.CustomerRegistration', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class CustomerRegistration(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def register_new_customer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/customer.CustomerRegistration/register_new_customer',
            customer__service_dot_customer__registration__pb2.CustomerRegistrationRequest.SerializeToString,
            customer__service_dot_customer__registration__pb2.CustomerRegistrationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def get_customer_by_reference(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/customer.CustomerRegistration/get_customer_by_reference',
            customer__service_dot_customer__registration__pb2.GetCustomerByReferenceRequest.SerializeToString,
            customer__service_dot_customer__registration__pb2.GetCustomerByReferenceResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def get_customer_by_email(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/customer.CustomerRegistration/get_customer_by_email',
            customer__service_dot_customer__registration__pb2.GetCustomerByEmailRequest.SerializeToString,
            customer__service_dot_customer__registration__pb2.GetCustomerByEmailResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
